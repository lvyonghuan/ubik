syntax = "proto3";

package ubique;

service Host {
  rpc Handshake(HandshakeMessage) returns (PongMessage);
  rpc Ping(PingMessage) returns (PongMessage);
  rpc SendMessage(SendMessageRequest) returns (Response);
}

service Plugin {
  rpc CreateNode(CreateNodeRequest) returns (Response);

  rpc SendMessage(SendMessageRequest) returns (Response);
  rpc Stop(StopRequest) returns (Response);
  rpc Run(RunRequest) returns (Response);
}

//HandshakeMessage is used to establish a connection
//between the host and the plugin
message HandshakeMessage {
  string name = 1; //plugin's name, must same as the name in info.json
  int32 port = 2;//plugin's port, you should implement some backoff mechanisms to avoid other plug-ins from squeezing the same port.
}

message PingMessage {}

message PongMessage {
  int32 state = 1;//TODO: define the state code
}

message CreateNodeRequest {
  int32 id = 1;
  string name = 2;
}

message SendMessageRequest {
  uint32 nodeID = 1;
  string pointName = 2;
  bytes message = 3;
}

message StopRequest {
  uint32 nodeID = 1;
  string pointName = 2;
}

message RunRequest {
  uint32 nodeID = 1;
  string pointName = 2;
}

message Response {
  uint32 status = 1;
}